@page "/home"
@using BattleShip.Models

<h3>Home</h3>

<div class="boards-container">
    <div>
        <h5>Player 1 Board</h5>
        <BoardUser Table="UserBoard" />
        <History></History>
    </div>

    <div>
        <h5>Player 2 Board</h5>
        <BoardAi Table="AIBoard" OnUpdate="(a) => UpdateAIBoard(a.UserResult,a.AiResult)"/>
        <History></History>
        </div>
</div>

<style>
    .boards-container {
        display: flex;
        justify-content: space-around;
    }

    .boards-container > div {
        margin: 10px;
    }
</style>
@code{

    [Parameter]
    public char[,] UserBoard { get; set; } = GameState.Instance.UserBoard;
    [Parameter]
    public char[,] AIBoard { get; set; } = GameState.Instance.AIBoard;
    
    private void UpdateUserBoard(AttackResult AiAttack)
    {
        var value = 'O';
        switch (AiAttack.Outcome)
        {
            case AttackOutcome.Hit:
                value = 'X';
                break;
            case AttackOutcome.Sunk:
                Console.Write("Sunk");
                break;
            case AttackOutcome.AlreadyAttacked:
                Console.WriteLine($"Error: Player Already Attacked {AiAttack.Coordinates[0]},{AiAttack.Coordinates[1]}");
                return;
        }
        UserBoard[AiAttack.Coordinates[0], AiAttack.Coordinates[1]] = value;
        StateHasChanged();
    }

    private void UpdateAIBoard(AttackResult PlayerAttack, AttackResult AiAttack)
    {
        Console.Write(PlayerAttack);
        Console.Write(AiAttack);
        var value = 'O';
        switch (PlayerAttack.Outcome)
        {
            case AttackOutcome.Hit:
                value = 'X';
                break;
            case AttackOutcome.Sunk:
                Console.Write("Sunk");
                break;
            case AttackOutcome.AlreadyAttacked:
                Console.WriteLine($"Error: Player Already Attacked {PlayerAttack.Coordinates[0]},{PlayerAttack.Coordinates[1]}");
                return;
        }

        AIBoard[PlayerAttack.Coordinates[0], PlayerAttack.Coordinates[1]] = value;
        StateHasChanged();
        UpdateUserBoard(AiAttack);
    }
}