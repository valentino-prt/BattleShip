@page "/"
@inject HttpClient Http;
@inject NavigationManager navigationManager
@using BattleShip.Models;
@using System.Text
@using System.Text.Json
@using BattleShip.Models.Response


<h1>Welcome to BattleShip!</h1>

                <button @onclick="StartGame">Start</button>

@code {
    private async Task StartGame()
    {
        using StringContent jsonContent = new(
            JsonSerializer.Serialize(new InitializeGameRequest(Guid.NewGuid(), new GameSettings(GameMode.SoloVsAI, AIDifficulty.Easy))),
            Encoding.UTF8,
            "application/json");

        var response = await Http.PostAsync("http://localhost:5143/games", jsonContent);

        if (response.IsSuccessStatusCode)
        {
            var gameInfo = await response.Content.ReadFromJsonAsync<InitializeGameResponse>();
            Console.Write(gameInfo);
            // Traiter les informations du jeu ici
        } else
        {
            Console.WriteLine($"Error: {response.StatusCode}");
        }
       /* HttpResponseMessage response = await httpClient.PostAsync("http://localhost:5143/games", null);
        response.EnsureSuccessStatusCode();
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadFromJsonAsync<GameInitInfo>();
            Console.WriteLine(content);
            if (content != null)
            {
                var playerBoard = new char[10, 10];
                
                Console.WriteLine(content.GameId);
                Console.WriteLine(content.Ships);
                foreach (var Ship in content.Ships)
                {
                    Console.WriteLine(Ship.Y);
                    Console.WriteLine(Ship.X);
                    switch (Ship.Direction)
                    {
                        case Direction.Horizontal:
                            for (var i = 0; i < Ship.Length; i++)
                            {
                                playerBoard[Ship.X + i, Ship.Y] = Ship.Type.ToString().Substring(0, 1)[0];
                            }
                            break;
                        case Direction.Vertical:
                            for (var i = 0; i < Ship.Length; i++)
                            {
                                playerBoard[Ship.X, Ship.Y + i] = Ship.Type.ToString().Substring(0, 1)[0];
                            }
                            break;
                        default:
                            return;
                    }
                }
                GameState.InitializeInstance(content.GameId, playerBoard, new char[10,10]);            */
        }
       
        //navigationManager.NavigateTo("/home");
    }
}
